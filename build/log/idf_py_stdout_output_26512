[1/31] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\get-started\BTL_VXL\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/get-started/BTL_VXL/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/29] Building C object esp-idf/sensors/CMakeFiles/__idf_sensors.dir/mhz14a.c.obj
[3/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/ili9341.c.obj
C:/get-started/BTL_VXL/components/display/ili9341.c: In function 'init_ili9341':
C:/get-started/BTL_VXL/components/display/ili9341.c:111:16: warning: unused variable 'disp' [-Wunused-variable]
  111 |     lv_disp_t *disp = lv_disp_drv_register(&disp_drv);
      |                ^~~~
[4/29] Building C object esp-idf/sensors/CMakeFiles/__idf_sensors.dir/pms7003.c.obj
[5/29] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/ui.c.obj
[7/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/ui_helpers.c.obj
[8/29] Building C object esp-idf/communications/CMakeFiles/__idf_communications.dir/mqtt.c.obj
[9/29] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/display/ili9341.c.obj
C:/get-started/BTL_VXL/components/display/ili9341.c: In function 'init_ili9341':
C:/get-started/BTL_VXL/components/display/ili9341.c:111:16: warning: unused variable 'disp' [-Wunused-variable]
  111 |     lv_disp_t *disp = lv_disp_drv_register(&disp_drv);
      |                ^~~~
[10/29] Building C object esp-idf/sensors/CMakeFiles/__idf_sensors.dir/bme280.c.obj
[11/29] Building C object esp-idf/sensors/CMakeFiles/__idf_sensors.dir/sensors.c.obj
[12/29] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/process.c.obj
[13/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_humirz1_png.c.obj
[14/29] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/__/components/sensors/bme280.c.obj
[15/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_co2_png.c.obj
[16/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_humi_png.c.obj
[17/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_temp_png.c.obj
[18/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_wwifi1_png.c.obj
[19/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_airsense_png.c.obj
[20/29] Building C object esp-idf/display/CMakeFiles/__idf_display.dir/images/ui_img_batterry_png.c.obj
[21/29] Linking C static library esp-idf\display\libdisplay.a
[22/29] Linking C static library esp-idf\communications\libcommunications.a
[23/29] Linking C static library esp-idf\sensors\libsensors.a
[24/29] Linking C static library esp-idf\main\libmain.a
[25/29] Generating ld/sections.ld
[26/29] Linking CXX executable main.elf
[27/29] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/get-started/BTL_VXL/build/main.bin
[28/29] cmd.exe /C "cd /D C:\get-started\BTL_VXL\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/get-started/BTL_VXL/build/partition_table/partition-table.bin C:/get-started/BTL_VXL/build/main.bin"
main.bin binary size 0x13ad80 bytes. Smallest app partition is 0x177000 bytes. 0x3c280 bytes (16%) free.
[28/29] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.1\components\esptool_py && C:\Espressif\tooesptool.py --chip esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.7.0
Serial port COM3
Connecting......................................

A fatal error occurred: Failed to connect to ESP32: Wrong boot mode detected (0x13)! The chip needs to be in download mode.
For troubleshooting steps visit: https://docs.espressif.com/projects/esptool/en/latest/troubleshooting.html
ls\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.2.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/get-started/BTL_VXL/build -P C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/run_serial_tool.cmake"
FAILED: CMakeFiles/flash C:/get-started/BTL_VXL/build/CMakeFiles/flash 
cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.2.1\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.2.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/get-started/BTL_VXL/build -P C:/Espressif/frameworks/esp-idf-v5.2.1/components/esptool_py/run_serial_tool.cmake"
ninja: build stopped: subcommand failed.
